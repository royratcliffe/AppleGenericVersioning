// AppleGenericVersioning AppleGenericVersioning.xcconfig
//
// Copyright © 2011, Roy Ratcliffe, Pioneering Software, United Kingdom
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the “Software”), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
//	The above copyright notice and this permission notice shall be included in
//	all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS,” WITHOUT WARRANTY OF ANY KIND, EITHER
// EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO
// EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
// OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
//------------------------------------------------------------------------------

// To start using Apple-generic versioning, copy and paste the following lines
// as text. Paste them to your Project's build settings. Xcode understands what
// they mean. Take care to paste them to your Project settings, not your Target
// settings. After pasting, you will see three new settings appear in bold, with
// new values as follows:
//
//	Current Project Version:	0
//	Versioning Name Prefix:		k
//	Versioning System:			Apple Generic
//

CURRENT_PROJECT_VERSION = 0
VERSION_INFO_PREFIX = k
VERSIONING_SYSTEM = apple-generic

// Copy the following to your build settings for project testing targets. You
// can then test versioning using the following test cases. The tests below
// correctly check for double space between the program and project names, and a
// trailing new-line character. The version number type-casts to double in order
// to avoid type mismatches when version numbers have no fractional part.
//
//	#define PROGRAM_NAME_STRING PROJECT_NAME_STRING
//	#define AT_HASH "@(#)PROGRAM:" PROGRAM_NAME_STRING "  PROJECT:" PROJECT_NAME_STRING "-"
//
//	- (void)testVersionString
//	{
//		STAssertEqualObjects(<#project name#>VersionString(), @AT_HASH CURRENT_PROJECT_VERSION_STRING, nil);
//	}
//
//	- (void)testVersionCString
//	{
//		STAssertEquals(strcmp((const char *)k<#project name#>VersionString, AT_HASH CURRENT_PROJECT_VERSION_STRING "\n"), 0, nil);
//	}
//
//	- (void)testVersionNumber
//	{
//		STAssertEquals(k<#project name#>VersionNumber, (double)CURRENT_PROJECT_VERSION, nil);
//	}
//

GCC_PREPROCESSOR_DEFINITIONS_NOT_USED_IN_PRECOMPS = PROJECT_NAME_STRING="\"$(PROJECT_NAME)\"" CURRENT_PROJECT_VERSION_STRING="\"$(CURRENT_PROJECT_VERSION)\"" CURRENT_PROJECT_VERSION=$(CURRENT_PROJECT_VERSION) $(inherited)
